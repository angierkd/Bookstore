name: CI/CD

on:
  push:
    branches:
      - develop

jobs:
  build:
    environment: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Run tests
        run: |
          chmod +x ./gradlew   
          ./gradlew test
        env:
          SPRING_DATASOURCE_URL: ${{ env.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ env.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}
          IMP_CODE: ${{ env.IMP_CODE }}
          IMP_API_KEY: ${{ env.IMP_API_KEY }}
          IMP_API_SECRETKEY: ${{ env.IMP_API_SECRETKEY }}

  docker_and_deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_NAME }}/bookstore:v1 .
          docker push ${{ secrets.DOCKERHUB_NAME }}/bookstore:v1

#      - name: Set up Google Cloud SDK
#        uses: google-github-actions/setup-gcloud@v1
#        with:
#          project_id: ${{ secrets.GCP_PROJECT_ID }}
#          service_account_key: ${{ secrets.GCP_SERVICE_KEY }}
#          export_default_credentials: true
#
#      - name: SSH into GCE instance and deploy
#        run: |
#          gcloud compute ssh ${{ secrets.GCE_INSTANCE_NAME }} --zone ${{ secrets.GCE_INSTANCE_ZONE }} --command "
#          docker pull ${{ secrets.DOCKERHUB_NAME }}/msa-notice:24.07.04 &&
#          docker stop current_container || true &&
#          docker rm current_container || true &&
#          docker run -d --name current_container -p 80:80 ${{ secrets.DOCKERHUB_NAME }}/msa-notice:24.07.04
#          "