name: ci.cd.prod

on:
  push:
    branches:
      - main

jobs:
  docker_and_deploy:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: build
        run: |
          chmod +x ./gradlew   
          ./gradlew build
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          IMP_CODE: ${{ secrets.IMP_CODE }}
          IMP_API_KEY: ${{ secrets.IMP_API_KEY }}
          IMP_API_SECRETKEY: ${{ secrets.IMP_API_SECRETKEY }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_NAME }}/bookstore:v1 .
          docker push ${{ secrets.DOCKERHUB_NAME }}/bookstore:v1


      - name: Create SSH key file
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_private_key
          chmod 600 /tmp/ssh_private_key

      - name: Deploy Docker image to EC2
        run: |
          ssh -i /tmp/ssh_private_key -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
              docker pull ${{ secrets.DOCKERHUB_NAME }}/bookstore:v1
              docker stop my-app || true
              docker rm my-app || true
              docker run --env-file /home/ubuntu/.env -d --name my-app -p 8080:8080 ${{ secrets.DOCKERHUB_NAME }}/bookstore:v1
          EOF